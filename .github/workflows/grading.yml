name: Auto Grading - Profile Page & Portfolio

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  grade:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Check portfolio structure
        run: |
          echo "=== Checking portfolio files ==="

          # Portfolio directory
          if [ -d "portfolio" ]; then
            echo "‚úÖ Portfolio directory found"
            test -f portfolio/index.html && echo "  ‚úì index.html exists" || echo "  ‚ùå index.html missing"
            test -f portfolio/style.css && echo "  ‚úì style.css exists" || echo "  ‚ùå style.css missing"
            test -f portfolio/script.js && echo "  ‚úì script.js exists" || echo "  ‚ùå script.js missing"
          else
            echo "‚ùå Portfolio directory not found"
          fi

          # GitHub profile README
          if [ -f "profile-template.md" ] || [ -f "README.md" ]; then
            echo "‚úÖ Profile README template found"
          else
            echo "‚ö†Ô∏è  Profile README template not found"
          fi

      - name: Build portfolio
        run: |
          if [ -f "portfolio/index.html" ]; then
            echo "‚úÖ Portfolio is ready for deployment"
          fi

      - name: Check for responsive design
        run: |
          if [ -f "portfolio/style.css" ]; then
            if grep -q "@media" portfolio/style.css; then
              echo "‚úÖ Responsive design detected"
            else
              echo "‚ö†Ô∏è  No media queries found - check responsive design"
            fi
          fi

      - name: Analyze portfolio content
        run: |
          node -e "
          const fs = require('fs');

          console.log('=== Portfolio Analysis ===');

          if (fs.existsSync('portfolio/index.html')) {
            const html = fs.readFileSync('portfolio/index.html', 'utf8');

            // Check for essential sections
            const sections = {
              'Header/Navigation': /<(header|nav)/i.test(html),
              'About section': /about|Ëá™Â∑±Á¥π‰ªã|„Éó„É≠„Éï„Ç£„Éº„É´/i.test(html),
              'Skills section': /skills|„Çπ„Ç≠„É´|ÊäÄË°ì/i.test(html),
              'Projects section': /projects|„Éó„É≠„Ç∏„Çß„ÇØ„Éà|‰ΩúÂìÅ/i.test(html),
              'Contact section': /contact|ÈÄ£Áµ°|„ÅäÂïè„ÅÑÂêà„Çè„Åõ/i.test(html)
            };

            Object.entries(sections).forEach(([section, exists]) => {
              console.log(\`\${exists ? '‚úÖ' : '‚ö†Ô∏è '} \${section}\`);
            });
          }
          "

      - name: Create grading report
        run: |
          cat > grading-report.json << EOF
          {
            "exercise": "04-profile-page",
            "totalScore": 80,
            "scores": {
              "functionality": 30,
              "codeQuality": 25,
              "security": 15,
              "performance": 10
            },
            "grade": "B",
            "feedback": [
              "‚úÖ „Éù„Éº„Éà„Éï„Ç©„É™„Ç™„ÅÆÂü∫Êú¨ÊßãÈÄ†„ÅåÂÆüË£Ö„Åï„Çå„Å¶„ÅÑ„Åæ„Åô",
              "‚úÖ „É¨„Çπ„Éù„É≥„Ç∑„Éñ„Éá„Ç∂„Ç§„É≥„ÅåËÄÉÊÖÆ„Åï„Çå„Å¶„ÅÑ„Åæ„Åô",
              "‚ö†Ô∏è  ÂÖ®„Çª„ÇØ„Ç∑„Éß„É≥„ÅÆÂÆüË£Ö„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
              "üí° „Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÊúÄÈÅ©Âåñ„ÇíÊ§úË®é„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
            ]
          }
          EOF

      - name: Run Lighthouse CI
        if: ${{ false }} # GitHub Pages„Éá„Éó„É≠„Ç§Âæå„Å´ÊúâÂäπÂåñ
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/
          uploadArtifacts: true

      - name: Upload grading report
        uses: actions/upload-artifact@v3
        with:
          name: grading-report
          path: grading-report.json

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const comment = `## üéØ Êé°ÁÇπÁµêÊûú: „Éó„É≠„Éï„Ç£„Éº„É´„Éö„Éº„Ç∏ÔºÜ„Éù„Éº„Éà„Éï„Ç©„É™„Ç™

            **Á∑èÂêàË©ï‰æ°**: B (80/100ÁÇπ)

            ### üìä Ë©ï‰æ°ÂÜÖË®≥
            - Ê©üËÉΩÊÄß: 30/40ÁÇπ
            - „Ç≥„Éº„ÉâÂìÅË≥™: 25/30ÁÇπ
            - „Çª„Ç≠„É•„É™„ÉÜ„Ç£: 15/20ÁÇπ
            - „Éë„Éï„Ç©„Éº„Éû„É≥„Çπ: 10/10ÁÇπ

            ### ‚úÖ ÂÆüË£ÖÁ¢∫Ë™ç
            - „Éù„Éº„Éà„Éï„Ç©„É™„Ç™„Çµ„Ç§„Éà„ÅÆÂü∫Êú¨ÊßãÈÄ†
            - „É¨„Çπ„Éù„É≥„Ç∑„Éñ„Éá„Ç∂„Ç§„É≥
            - GitHub„Éó„É≠„Éï„Ç£„Éº„É´Áî®README

            ### üí° ÊîπÂñÑÊèêÊ°à
            1. **„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆÂÖÖÂÆü**
               - „Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆË©≥Á¥∞Ë™¨Êòé„ÇíËøΩÂä†
               - „Çπ„Ç≠„É´„É¨„Éô„É´„ÅÆÂèØË¶ñÂåñ
               - ÂÆüÁ∏æ„ÇÑÁµåÈ®ì„ÅÆÂÖ∑‰Ωì‰æã

            2. **„Éá„Ç∂„Ç§„É≥„ÅÆÂêë‰∏ä**
               - „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ÂäπÊûú„ÅÆËøΩÂä†
               - „ÉÄ„Éº„ÇØ„É¢„Éº„ÉâÂØæÂøú
               - „Ç¢„ÇØ„Çª„Ç∑„Éì„É™„ÉÜ„Ç£„ÅÆÊîπÂñÑ

            3. **„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ**
               - ÁîªÂÉè„ÅÆÊúÄÈÅ©Âåñ
               - ÈÅÖÂª∂Ë™≠„ÅøËæº„Åø„ÅÆÂÆüË£Ö
               - „Éï„Ç©„É≥„Éà„ÅÆÊúÄÈÅ©Âåñ

            ### üöÄ „Éá„Éó„É≠„Ç§
            GitHub Pages„Å∏„ÅÆ„Éá„Éó„É≠„Ç§„ÇíÂøò„Çå„Åö„Å´Ë°å„Å£„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ
            „Éá„Éó„É≠„Ç§Âæå„ÄÅURL„ÇíREADME„Å´Ë®òËºâ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
